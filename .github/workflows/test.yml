name: linux
on: push


jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
          - uses: actions/checkout@v2
          - name: Set env
            run: echo "TON=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          - name: Test
            run: echo $TON
          - uses: oprypin/find-latest-tag@v1
            with:
                repository: stupid-kid-af/godot-nighly-builds  # The repository to scan.
                releases-only: true  # We know that all relevant tags have a GitHub release for them.
            id: octokit  # The step ID to refer to later.
            
          #- uses: actions/checkout@v2
         # - name: TESTT
        #  - run:  echo "TAGNAME=$(echo ${{ steps.octokit.outputs.tag }} | cut -c 1-6)" >> $GITHUB_ENV
       #   - name: WGET
          - uses: actions/checkout@v2
          - name: Set env
            run: echo TAGNAME=$(echo ${{ steps.octokit.outputs.tag }}) >> $GITHUB_ENV
          - run: |
              wget  github.com/stupid-kid-af/godot-nighly-builds/releases/download/${TAGNAME}/godot_binaries-times${TAGNAME}.zip 
              unzip godot_binaries-times${TAGNAME}.zip
              cd bin
              sudo apt-get install build-essential scons pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm
              wget https://github.com/AppImage/AppImageKit/releases/download/12/appimagetool-x86_64.AppImage
              chmod +x appimagetool-x86_64.AppImage
              git clone https://github.com/stupid-kid-af/appimage
              cd appimage
              chmod +x ./AppRun
              mkdir usr
              mkdir usr/bin
              cd ..
              mv godot.linuxbsd.opt.tools.64.llvm appimage/usr/bin/
              git clone --single-branch --recursive https://github.com/AppImage/AppImageKit
              mv appimage AppImageKit/ci/
              cd AppImageKit/ci
              ARCH=x86_64 bash build.sh  appimage
              ARCH=x86_64 bash build-binaries-and-appimage.sh appimage
              curl bashupload.com -T Godot-x86_64.AppImage

              wget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage
              chmod +x appimagetool-x86_64.AppImage
              ARCH=x86_64 ./appimagetool-x86_64.AppImage appimage
              curl bashupload.com -T Godot-x86_64.AppImage

          #wget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage
         # chmod +x appimagetool-x86_64.AppImage
         # ARCH=x86_64 ./appimagetool-x86_64.AppImage appimage
         # chmod a+x godot.AppImage
              

          
      


